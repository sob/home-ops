---
# Clean up succeeded k6 test initializer and starter pods after 1 minute
apiVersion: kyverno.io/v2
kind: ClusterCleanupPolicy
metadata:
  name: k6-initializer-starter-cleanup
spec:
  schedule: "*/1 * * * *"  # Run every minute
  match:
    any:
      - resources:
          kinds:
            - Pod
          namespaces:
            - observability
          selector:
            matchLabels:
              app: k6
  conditions:
    all:
      - key: "{{ target.status.phase }}"
        operator: Equals
        value: Succeeded
      - key: "{{ time_since('', target.metadata.creationTimestamp, '') }}"
        operator: GreaterThan
        value: 1m
      - key: "{{ contains(target.metadata.name, 'initializer') || contains(target.metadata.name, 'starter') }}"
        operator: Equals
        value: true
---
# Clean up succeeded k6 runner pods after 1 hour
apiVersion: kyverno.io/v2
kind: ClusterCleanupPolicy
metadata:
  name: k6-runner-cleanup
spec:
  schedule: "*/2 * * * *"  # Run every 2 minutes
  match:
    any:
      - resources:
          kinds:
            - Pod
          namespaces:
            - observability
          selector:
            matchLabels:
              app: k6
  conditions:
    all:
      - key: "{{ target.status.phase }}"
        operator: Equals
        value: Succeeded
      - key: "{{ time_since('', target.metadata.creationTimestamp, '') }}"
        operator: GreaterThan
        value: 1h
      - key: "{{ !contains(target.metadata.name, 'initializer') && !contains(target.metadata.name, 'starter') }}"
        operator: Equals
        value: true
---
# Clean up failed k6 pods after 1 hour for debugging
apiVersion: kyverno.io/v2
kind: ClusterCleanupPolicy
metadata:
  name: k6-failed-cleanup
spec:
  schedule: "*/2 * * * *"  # Run every 2 minutes
  match:
    any:
      - resources:
          kinds:
            - Pod
          namespaces:
            - observability
          selector:
            matchLabels:
              app: k6
  conditions:
    all:
      - key: "{{ target.status.phase }}"
        operator: Equals
        value: Failed
      - key: "{{ time_since('', target.metadata.creationTimestamp, '') }}"
        operator: GreaterThan
        value: 1h