---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: enigma-bbs
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: enigma-bbs
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      enigma-bbs:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-vtx:
            image:
              repository: docker.io/alpine
              tag: 3.21
            command:
              - /bin/sh
              - -c
              - |
                apk add --no-cache curl tar
                cd /vtx
                if [ ! -f index.html ]; then
                  echo "Downloading VTX client files..."
                  curl -fsSL https://github.com/codewar65/VTX_ClientServer/archive/refs/heads/master.tar.gz | tar xz --strip-components=2 VTX_ClientServer-master/www
                  # Update WebSocket URL in index.html
                  sed -i 's|wsConnect:.*|wsConnect: "wss://wss.halfduplex.io",|' index.html
                  sed -i 's|sysName:.*|sysName: "halfduplex BBS",|' index.html
                  # Fix vtxclient.js filename reference
                  sed -i 's|vtxclient_94.js|vtxclient.js|' index.html
                  echo "VTX client ready"
                else
                  echo "VTX client files already exist, skipping download"
                fi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities:
                drop: ["ALL"]
        containers:
          app:
            image:
              repository: ghcr.io/sob/enigma-bbs
              tag: 644076b@sha256:bd610795affdb93d3839159443e4124043f6c60ade113e73a491253d39aa8499
            env:
              TZ: America/Chicago
              NODE_ENV: production
              HOME: /root
              PM2_HOME: /root/.pm2
            probes:
              liveness:
                enabled: false
              readiness:
                enabled: false
              startup:
                enabled: false
            securityContext:
              runAsUser: 1000
              runAsGroup: 1000
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities:
                drop: ["ALL"]
            resources:
              requests:
                cpu: 50m
                memory: 256Mi
              limits:
                memory: 2Gi
          nginx:
            image:
              repository: docker.io/nginxinc/nginx-unprivileged
              tag: 1.27-alpine
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities:
                drop: ["ALL"]
            resources:
              requests:
                cpu: 10m
                memory: 32Mi
              limits:
                memory: 128Mi
            probes:
              liveness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: 8080
              readiness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: 8080
          code-server:
            image:
              repository: ghcr.io/coder/code-server
              tag: 4.105.1
            args:
              - --auth
              - none
              - --user-data-dir
              - /config/.vscode
              - --extensions-dir
              - /config/.vscode
              - --port
              - "8443"
              - /config
            env:
              TZ: America/Chicago
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              runAsUser: 1000
              runAsGroup: 1000
              capabilities:
                drop: ["ALL"]
            resources:
              requests:
                cpu: 100m
                memory: 256Mi
              limits:
                memory: 1Gi
            probes:
              liveness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /healthz
                    port: 8443
              readiness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /healthz
                    port: 8443
    defaultPodOptions:
      securityContext:
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        controller: enigma-bbs
        ports:
          telnet:
            port: 23
            protocol: TCP
          ssh:
            port: 22
            protocol: TCP
          wss:
            port: 8811
            protocol: TCP
            targetPort: 8812  # Route to nginx proxy which cleans XFF
          binkp:
            port: 24554
            protocol: TCP
          http:
            port: 80
            protocol: TCP
            targetPort: 8080
          code:
            port: 8443
            protocol: TCP
    ingress:
      code:
        enabled: true
        className: internal
        annotations:
          nginx.ingress.kubernetes.io/auth-response-headers: Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid,authorization
          nginx.ingress.kubernetes.io/auth-signin: https://$http_host/outpost.goauthentik.io/start?rd=https://$http_host$escaped_request_uri
          nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Host $http_host;
          nginx.ingress.kubernetes.io/auth-url: http://ak-outpost-halfduplex.security.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
          nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
          nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
        hosts:
          - host: edit.halfduplex.io
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: enigma-bbs
                  port: 8443
        tls:
          - hosts:
              - edit.halfduplex.io
            secretName: halfduplex-io-production-tls
    route:
      websocket:
        parentRefs:
          - group: gateway.networking.k8s.io
            kind: Gateway
            name: external-gateway
            namespace: network
            sectionName: https-halfduplex
          - group: gateway.networking.k8s.io
            kind: Gateway
            name: internal-gateway
            namespace: network
            sectionName: https-halfduplex
        hostnames:
          - wss.halfduplex.io
        rules:
          - backendRefs:
              - name: enigma-bbs
                port: 8811
            matches:
              - path:
                  type: PathPrefix
                  value: /
      web:
        parentRefs:
          - group: gateway.networking.k8s.io
            kind: Gateway
            name: external-gateway
            namespace: network
            sectionName: https-halfduplex-apex
          - group: gateway.networking.k8s.io
            kind: Gateway
            name: internal-gateway
            namespace: network
            sectionName: https-halfduplex-apex
        hostnames:
          - halfduplex.io
        rules:
          - backendRefs:
              - name: enigma-bbs
                port: 80
            matches:
              - path:
                  type: PathPrefix
                  value: /
    persistence:
      data:
        existingClaim: "{{ .Release.Name }}"
        advancedMounts:
          enigma-bbs:
            app:
              - path: /enigma-bbs/config
                subPath: config
              - path: /enigma-bbs/db
                subPath: db
              - path: /enigma-bbs/filebase
                subPath: filebase
              - path: /enigma-bbs/art
                subPath: art
              - path: /enigma-bbs/mods
                subPath: mods
              - path: /enigma-bbs/menus
                subPath: menus
              - path: /enigma-bbs/mail
                subPath: mail
            code-server:
              - path: /enigma-bbs/config
                subPath: config
              - path: /enigma-bbs/db
                subPath: db
              - path: /enigma-bbs/filebase
                subPath: filebase
              - path: /enigma-bbs/art
                subPath: art
              - path: /enigma-bbs/mods
                subPath: mods
              - path: /enigma-bbs/menus
                subPath: menus
              - path: /enigma-bbs/mail
                subPath: mail
              - path: /vtx
                subPath: vtx
            init-vtx:
              - path: /vtx
                subPath: vtx
            nginx:
              - path: /usr/share/nginx/html
                subPath: vtx
      logs:
        type: emptyDir
        globalMounts:
          - path: /enigma-bbs/logs
      home:
        type: emptyDir
        globalMounts:
          - path: /root
      tmpfs:
        type: emptyDir
        advancedMounts:
          enigma-bbs:
            app:
              - path: /tmp
      run:
        type: emptyDir
        advancedMounts:
          enigma-bbs:
            app:
              - path: /var/run
      var-log:
        type: emptyDir
        advancedMounts:
          enigma-bbs:
            app:
              - path: /var/log
      nginx-config:
        type: configMap
        name: enigma-bbs-nginx-config
        advancedMounts:
          enigma-bbs:
            nginx:
              - path: /etc/nginx/nginx.conf
                subPath: nginx.conf
                readOnly: true
      nginx-tmp:
        type: emptyDir
        advancedMounts:
          enigma-bbs:
            nginx:
              - path: /tmp
      nginx-cache:
        type: emptyDir
        advancedMounts:
          enigma-bbs:
            nginx:
              - path: /var/cache/nginx
      nginx-log:
        type: emptyDir
        advancedMounts:
          enigma-bbs:
            nginx:
              - path: /var/log/nginx
