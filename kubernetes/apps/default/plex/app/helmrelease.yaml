---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app plex
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: openebs
      namespace: storage
    - name: volsync
      namespace: storage
    - name: intel-device-plugin-gpu
      namespace: kube-system
  values:
    controllers:
      plex:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/plex
              tag: 1.40.4.8679-424562606@sha256:6caeca24f3b08206a94a6a9c102e2c0c14d46d5a9163241716559e8c83f53ff8
            env:
              TZ: America/Chicago
              PLEX_ADVERTISE_URL: https://plex.${SECRET_DOMAIN}:443,http://${SECRET_VIP_PLEX}:32400
              PLEX_NO_AUTH_NETWORKS: ${SECERT_CIDR}
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /identity
                    port: 32400
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 10
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
              limits:
                memory: 16Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1030
        runAsGroup: 65536
        fsGroup: 65536
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [44, 100]
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: *app
        type: LoadBalancer
        annotations:
          io.cilium/lb-ipam-ips: ${SECRET_VIP_PLEX}
        ports:
          http:
            port: 32400
    ingress:
      app:
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Media
          gethomepage.dev/name: Plex
          gethomepage.dev/icon: plex.png
          gethomepage.dev/description: Media Server
          gethomepage.dev/href: https://plex.${SECRET_DOMAIN}
          gethomepage.dev/widget.type: plex
          gethomepage.dev/widget.url: http://plex.default.svc.cluster.local
          gethomepage.dev/widget.key: "{{ `{{HOMEPAGE_VAR_PLEX_TOKEN}}` }}"
          gethomepage.dev/widget.enableNowPlaying: "true"
          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
          nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
        className: external
        hosts:
          - host: "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        existingClaim: plex
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server
      # Separate PVC for cache to avoid backing up cache files
      cache:
        type: persistentVolumeClaim
        storageClass: openebs-hostpath
        retain: false
        accessMode: ReadWriteOnce
        size: 20Gi
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server/Cache
      logs:
        type: emptyDir
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server/Logs
      tmp:
        type: emptyDir
      transcode:
        type: emptyDir
      media:
        type: custom
        volumeSpec:
          nfs:
            server: ${SECRET_NFS_SERVER}
            path: ${SECRET_NFS_PATH_MEDIA}/Library
            mountOptions:
              - nfsvers=4.1
              - hard
              - noatime
              - rsize=131072
              - wsize=131072
        globalMounts:
          - path: /media
            readOnly: true
