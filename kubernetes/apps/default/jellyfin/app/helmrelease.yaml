---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: jellyfin
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      jellyfin:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/jellyfin/jellyfin
              tag: 10.10.7@sha256:e4d1dc5374344446a3a78e43dd211247f22afba84ea2e5a13cbe1a94e1ff2141
            env:
              TZ: America/Chicago
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: &port 8096
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 10
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
              limits:
                gpu.intel.com/i915: 1
                memory: 8Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1036
        runAsGroup: 65536
        fsGroup: 65536
        fsGroupChangePolicy: OnRootMismatch
      tolerations:
        - key: "workload-type"
          operator: "Equal"
          value: "media"
          effect: "NoSchedule"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/media
                    operator: In
                    values:
                      - "true"
    service:
      app:
        ports:
          http:
            port: *port
    serviceMonitor:
      app:
        serviceName: jellyfin
        labels:
          prometheus.io/forward: "true"
        endpoints:
          - port: http
    route:
      app:
        annotations:
          external-dns.alpha.kubernetes.io/is-public: "true"
        hostnames: ["{{ .Release.Name }}.${SECRET_DOMAIN}", "jelly.${SECRET_DOMAIN}"]
        parentRefs:
          - name: external-gateway
            namespace: network
            sectionName: https
          - name: internal-gateway
            namespace: network
            sectionName: https
        rules:
          - backendRefs:
              - name: jellyfin
                port: 8096
    persistence:
      config:
        existingClaim: "{{ .Release.Name }}"
        globalMounts:
          - path: /config
      config-cache:
        existingClaim: "{{ .Release.Name }}-cache"
        globalMounts:
          - path: /config/metadata
      media:
        type: custom
        volumeSpec:
          nfs:
            server: ${SECRET_NFS_SERVER}
            path: ${SECRET_NFS_PATH_MEDIA}/Library
            mountOptions:
              - nfsvers=4.1
              - hard
              - noatime
              - rsize=131072
              - wsize=131072
        globalMounts:
          - path: /media
            readOnly: true
      transcode:
        type: emptyDir
        medium: Memory  # Use RAM for transcoding
        sizeLimit: 8Gi  # Adjust based on available RAM
      tmpfs:
        type: emptyDir
        advancedMounts:
          jellyfin:
            app:
              - path: /cache
                subPath: cache
              - path: /config/log
                subPath: log
              - path: /tmp
                subPath: tmp
