---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/monitoring.coreos.com/prometheusrule_v1.json
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: pod-metrics
  namespace: observability
spec:
  groups:
    - name: pod.cpu
      interval: 30s
      rules:
        # CPU usage in millicores for all pods
        - record: pod:cpu_usage_millicores
          expr: |
            sum by (pod, namespace, workload) (
              label_replace(
                round(
                  sum by (pod, namespace) (
                    rate(container_cpu_usage_seconds_total[1m])
                  ) * 1000
                ),
                "workload", "$1", "pod", "^([a-z-]+)-[0-9a-z]+-[0-9a-z]+$"
              )
            )
          labels:
            unit: "millicores"

        # CPU requests in millicores for all pods
        - record: pod:cpu_request_millicores
          expr: |
            sum by (pod, namespace, workload) (
              label_replace(
                sum by (pod, namespace) (
                  kube_pod_container_resource_requests{
                    resource="cpu",
                    unit="core"
                  } * 1000
                ),
                "workload", "$1", "pod", "^([a-z-]+)-[0-9a-z]+-[0-9a-z]+$"
              )
            )
          labels:
            unit: "millicores"
            
        # CPU limits in millicores for all pods
        - record: pod:cpu_limit_millicores
          expr: |
            sum by (pod, namespace, workload) (
              label_replace(
                sum by (pod, namespace) (
                  kube_pod_container_resource_limits{
                    resource="cpu",
                    unit="core"
                  } * 1000
                ),
                "workload", "$1", "pod", "^([a-z-]+)-[0-9a-z]+-[0-9a-z]+$"
              )
            )
          labels:
            unit: "millicores"

        # CPU usage percentage against request
        - record: pod:cpu_request_percent
          expr: |
            round(
              (pod:cpu_usage_millicores / on(pod, namespace, workload) pod:cpu_request_millicores) * 100,
              0.1
            )
          labels:
            unit: "percent"
            
        # CPU usage percentage against limit (NaN if no limit)
        - record: pod:cpu_limit_percent
          expr: |
            round(
              (pod:cpu_usage_millicores / on(pod, namespace, workload) pod:cpu_limit_millicores) * 100,
              0.1
            )
          labels:
            unit: "percent"

    - name: pod.memory
      interval: 30s
      rules:
        # Memory usage in MiB for all pods
        - record: pod:memory_usage_mb
          expr: |
            sum by (pod, namespace, workload) (
              label_replace(
                round(
                  sum by (pod, namespace) (
                    container_memory_working_set_bytes
                  ) / 1024 / 1024
                ),
                "workload", "$1", "pod", "^([a-z-]+)-[0-9a-z]+-[0-9a-z]+$"
              )
            )
          labels:
            unit: "mebibytes"

        # Memory requests in MiB for all pods
        - record: pod:memory_request_mb
          expr: |
            sum by (pod, namespace, workload) (
              label_replace(
                round(
                  sum by (pod, namespace) (
                    kube_pod_container_resource_requests{
                      resource="memory",
                      unit="byte"
                    }
                  ) / 1024 / 1024
                ),
                "workload", "$1", "pod", "^([a-z-]+)-[0-9a-z]+-[0-9a-z]+$"
              )
            )
          labels:
            unit: "mebibytes"
            
        # Memory limits in MiB for all pods
        - record: pod:memory_limit_mb
          expr: |
            sum by (pod, namespace, workload) (
              label_replace(
                round(
                  sum by (pod, namespace) (
                    kube_pod_container_resource_limits{
                      resource="memory",
                      unit="byte"
                    }
                  ) / 1024 / 1024
                ),
                "workload", "$1", "pod", "^([a-z-]+)-[0-9a-z]+-[0-9a-z]+$"
              )
            )
          labels:
            unit: "mebibytes"

        # Memory usage percentage against request (NaN if no request)
        - record: pod:memory_request_percent
          expr: |
            round(
              (pod:memory_usage_mb / on(pod, namespace, workload) pod:memory_request_mb) * 100,
              0.1
            )
          labels:
            unit: "percent"
            
        # Memory usage percentage against limit (NaN if no limit)
        - record: pod:memory_limit_percent
          expr: |
            round(
              (pod:memory_usage_mb / on(pod, namespace, workload) pod:memory_limit_mb) * 100,
              0.1
            )
          labels:
            unit: "percent"


