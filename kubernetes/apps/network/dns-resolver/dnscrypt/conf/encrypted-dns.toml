##################################
#         Global settings        #
##################################

listen_addrs = [
    { local = "0.0.0.0:443" }
]

## Upstream DNS server and port
upstream_addr = "${SECRET_VIP_UNBOUND}:53"

## File name to save the state to
state_file = "encrypted-dns.state"

## UDP timeout in seconds
udp_timeout = 10

## TCP timeout in seconds
tcp_timeout = 10

## Maximum active UDP sockets
udp_max_active_connections = 1000

## Maximum active TCP connections
tcp_max_active_connections = 100

## Built-in DNS cache capacity
cache_capacity = 150000

## DNS cache: minimum TTL
cache_ttl_min = 3600

## DNS cache: max TTL
cache_ttl_max = 86400

## DNS cache: error TTL
cache_ttl_error = 600

## DNS cache: to avoid bursts of traffic for popular queries when an
## RRSET expires, hold a TTL received from an upstream server for
## `client_ttl_holdon` seconds before decreasing it in client responses.
client_ttl_holdon = 60

## Run as a background process
daemonize = false

## Log file, when running as a background process
# log_file = "/tmp/encrypted-dns.log"

## PID file
# pid_file = "/tmp/encrypted-dns.pid"

## User name to drop privileges to, when started as root.
user = "_encrypted-dns"

## Group name to drop privileges to, when started as root.
group = "_encrypted-dns"

## Path to chroot() to, when started as root.
## The path to the state file is relative to the chroot base.
# chroot = "/var/empty"

## Queries sent to that name will return the client IP address.
## This can be very useful for debugging, or to check that relaying works.
my_ip = "my.ip"

####################################
#         DNSCrypt settings        #
####################################

[dnscrypt]
## Provider name (with or without the `2.dnscrypt-cert.` prefix)
provider_name = "@PROVIDER_NAME@"

## Does the server support DNSSEC?
dnssec = true

## Does the server always returns correct answers (no filtering, including ad blocking)?
no_filters = true

## Set to `true` if the server doesn't keep any information that can be used to identify users
no_logs = true

## Key cache capacity, per certificate
key_cache_capacity = 10000

###############################
#         TLS settings        #
###############################

[tls]
## Where to proxy TLS connections to (e.g. DoH server)
@TLS_PROXY_CONFIGURATION@

#######################################
#        Server-side filtering        #
#######################################

[filtering]
## List of domains to block, one per line
# domain_blacklist = "/etc/domain_blacklist.txt"

## List of undelegated TLDs
## This is the list of nonexistent TLDs that queries are frequently observed for,
## but will never resolve to anything. The server will immediately return a
## synthesized NXDOMAIN response instead of hitting root servers.
# undelegated_list = "/etc/undelegated.txt"

## Ignore A and AAAA queries for unqualified host names.
# ignore_unqualified_hostnames = true

#########################
#        Metrics        #
#########################

[metrics]
type = "prometheus"
listen_addr = "0.0.0.0:9100"
path = "/metrics"

################################
#        Anonymized DNS        #
################################

[anonymized_dns]
# Enable relaying support for Anonymized DNS
enabled = @ANONDNS_ENABLED@

# Allowed upstream ports
# This is a list of commonly used ports for encrypted DNS services
allowed_ports = [ 443, 553, 853, 1443, 2053, 4343, 4434, 4443, 5353, 5443, 8443, 15353 ]

# Allow all ports >= 1024 in addition to the list above
allow_non_reserved_ports = false

# Blacklisted upstream IP addresses
blacklisted_ips = [ @ANONDNS_BLACKLISTED_IPS@ ]

################################
#        Access control        #
################################

[access_control]
enabled = false
tokens = []
