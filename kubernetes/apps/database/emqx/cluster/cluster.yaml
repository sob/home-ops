---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/apps.emqx.io/emqx_v2beta1.json
apiVersion: apps.emqx.io/v2beta1
kind: EMQX
metadata:
  name: emqx
spec:
  image: public.ecr.aws/emqx/emqx:5.8.3
  config:
    data: |
      authentication {
        enable = true
        backend = "built_in_database"
        mechanism = "password_based"
        password_hash_algorithm {
            name = "bcrypt",
        }
        user_id_type = "username"
        bootstrap_file = "/secrets/init-user.json"
        bootstrap_type = "plain"
      }
      authorization {
        no_match = "deny"
        deny_action = "ignore"
        sources = [
          {
            type = file
            enable = true
            path = "/secrets/acl.conf"
          }
        ]
        no_match: "deny"
      }
  bootstrapAPIKeys:
    - secretRef:
        key:
          secretName: emqx-secret
          secretKey: X_EMQX_APIKEY_KEY
        secret:
          secretName: emqx-secret
          secretKey: X_EMQX_APIKEY_SECRET
  coreTemplate:
    metadata:
      annotations:
        reloader.stakater.com/auto: "true"
    spec:
      replicas: 3
      envFrom: &envFrom
        - secretRef:
            name: emqx-secret
      extraVolumes:
        - name: emqx-secret
          secret:
            secretName: emqx-secret
      extraVolumeMounts:
        - mountPath: "/secrets/init-user.json"
          name: emqx-secret
          subPath: init-user.json
          readOnly: true
        - mountPath: "/secrets/acl.conf"
          name: emqx-secret
          subPath: acl.conf
          readOnly: true
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
  listenersServiceTemplate:
    metadata:
      annotations:
        coredns.io/hostname: "emqx.${SECRET_DOMAIN}"
        io.cilium/lb-ipam-ips: 10.1.100.220
    spec:
      type: LoadBalancer
