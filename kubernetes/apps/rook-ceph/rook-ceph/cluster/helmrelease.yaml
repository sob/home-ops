---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: rook-ceph-cluster
spec:
  interval: 30m
  timeout: 15m
  chart:
    spec:
      chart: rook-ceph-cluster
      version: v1.17.1
      sourceRef:
        kind: HelmRepository
        name: rook-ceph
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: rook-ceph-operator
      namespace: rook-ceph
    - name: snapshot-controller
      namespace: storage
  values:
    monitoring:
      enabled: true
      createPrometheusRules: true
    ingress:
      dashboard:
        ingressClassName: internal
        annotations:
          external-dns.alpha.kubernetes.io/target: internal.${SECRET_DOMAIN}
          gethomepage.dev/enabled: "true"
          gethomepage.dev/name: Rook
          gethomepage.dev/description: Cloud-Native Storage for Kubernetes.
          gethomepage.dev/group: Infrastructure
          gethomepage.dev/icon: rook.png
          gethomepage.dev/pod-selector: >-
            app in (
              rook
            )
        host:
          name: rook.${SECRET_DOMAIN}
          path: /
    toolbox:
      enabled: true
    configOverride: |
      [global]
      bdev_enable_discard = true
      bdev_async_discard = true
      osd_class_update_on_start = false
    cephClusterSpec:
      # Add placement configuration for critical components
      placement:
        mon:
          tolerations:
            - key: "node-role.kubernetes.io/control-plane"
              operator: "Exists"
              effect: "NoSchedule"
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 100
                preference:
                  matchExpressions:
                    - key: node-role.kubernetes.io/control-plane
                      operator: Exists
        mgr:
          tolerations:
            - key: "node-role.kubernetes.io/control-plane"
              operator: "Exists"
              effect: "NoSchedule"
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 100
                preference:
                  matchExpressions:
                    - key: node-role.kubernetes.io/control-plane
                      operator: Exists
        # OSD placement explicitly on worker nodes with SSDs
        osd:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: kubernetes.io/hostname
                      operator: In
                      values:
                        - metal-04
                        - metal-05
                        - metal-06
      crashCollector:
        disable: false
      csi:
        readAffinity:
          enabled: true
      dashboard:
        enabled: true
        urlPrefix: /
        ssl: false
        prometheusEndpoint: http://prometheus-operated.observability.svc.cluster.local:9090
      mgr:
        modules:
          - name: insights
            enabled: true
          - name: pg_autoscaler
            enabled: true
          - name: rook
            enabled: true
      network:
        provider: host
        connections:
          requireMsgr2: true
      storage:
        useAllNodes: false
        useAllDevices: false
        deviceFilter: nvme0n1
        config:
          osdsPerDevice: "1"
        nodes:
          - name: "metal-04"
            devices:
              - name: "/dev/sda"
          - name: "metal-05"
            devices:
              - name: "/dev/sda"
          - name: "metal-06"
            devices:
              - name: "/dev/sda"
      resources:
        mgr:
          requests:
            cpu: 20m
            memory: 768Mi
          limits:
            memory: 2Gi
        mon:
          requests:
            cpu: 75m
            memory: 1Gi
          limits:
            memory: 2.5Gi
        osd:
          requests:
            cpu: 50m
            memory: 1.5Gi
          limits:
            memory: 6Gi
        mgr-sidecar:
          requests:
            cpu: 25m
            memory: 32Mi
          limits:
            memory: 256Mi
        crashcollector:
          requests:
            cpu: 100m
            memory: 60Mi
          limits:
            memory: 60Mi
        logcollector:
          requests:
            cpu: 10m
            memory: 32Mi
          limits:
            memory: 1Gi
        cleanup:
          requests:
            cpu: 500m
            memory: 100Mi
          limits:
            memory: 1Gi
        exporter:
          requests:
            cpu: 50m
            memory: 50Mi
          limits:
            memory: 128Mi
    cephBlockPools:
      - name: ceph-blockpool
        spec:
          failureDomain: host
          replicated:
            size: 3
        storageClass:
          enabled: true
          name: ceph-block
          isDefault: true
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          volumeBindingMode: Immediate
          mountOptions: ["discard"]
          parameters:
            imageFormat: "2"
            imageFeatures: layering,fast-diff,object-map,deep-flatten,exclusive-lock
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: ext4
    cephBlockPoolsVolumeSnapshotClass:
      enabled: true
      name: csi-ceph-blockpool
      isDefault: false
      deletionPolicy: Delete
    cephFileSystems:
      - name: &cephFileSystemName ceph-filesystem
        spec:
          metadataPool:
            replicated:
              size: 3
          dataPools:
            - failureDomain: host
              replicated:
                size: 3
              name: data0
          metadataServer:
            activeCount: 1
            activeStandby: true
            priorityClassName: system-cluster-critical
            placement:
              # Add tolerations to allow MDS on control plane
              tolerations:
                - key: "node-role.kubernetes.io/control-plane"
                  operator: "Exists"
                  effect: "NoSchedule"
              nodeAffinity:
                preferredDuringSchedulingIgnoredDuringExecution:
                  - weight: 100
                    preference:
                      matchExpressions:
                        - key: node-role.kubernetes.io/control-plane
                          operator: Exists
              topologySpreadConstraints:
                - maxSkew: 1
                  topologyKey: kubernetes.io/hostname
                  whenUnsatisfiable: DoNotSchedule
                  labelSelector:
                    matchLabels:
                      app.kubernetes.io/name: ceph-mds
