---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/refs/heads/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: rook-ceph-cluster
spec:
  interval: 30m
  timeout: 30m
  chart:
    spec:
      chart: rook-ceph-cluster
      version: v1.17.7
      sourceRef:
        kind: HelmRepository
        name: rook-ceph
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    cleanupOnFail: true
    remediation: &remediation
      strategy: rollback
      retries: 5
  uninstall:
    keepHistory: false
  dependsOn:
    - name: rook-ceph-operator
      namespace: rook-ceph
    - name: snapshot-controller
      namespace: storage
  values:
    monitoring:
      enabled: true
      createPrometheusRules: true
    ingress:
      dashboard:
        ingressClassName: &ingressClass internal
        annotations: &dashboardAnnotations
          external-dns.alpha.kubernetes.io/target: internal.${SECRET_DOMAIN}
        host:
          name: rook.${SECRET_DOMAIN}
          path: &rootPath /
    toolbox:
      enabled: false
      priorityClassName: &criticalPriority infrastructure-critical

    # Resource definitions
    resources: &defaultResources
      requests: &defaultRequests
        cpu: "50m"
        memory: "64Mi"
      limits: &defaultLimits
        cpu: "100m"
        memory: "128Mi"

    # Control plane toleration and affinity
    controlPlaneToleration: &controlPlaneToleration
      - key: "node-role.kubernetes.io/control-plane"
        operator: "Exists"
        effect: "NoSchedule"

    controlPlaneAffinity: &controlPlaneAffinity
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: node-role.kubernetes.io/control-plane
                  operator: Exists

    controlPlanePreferredAffinity: &controlPlanePreferredAffinity
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
                - key: node-role.kubernetes.io/control-plane
                  operator: Exists

    configOverride: |
      [global]
      bdev_enable_discard = true
      bdev_async_discard = true
      osd_class_update_on_start = false

    cephClusterSpec:
      # Resource definitions
      resources:
        osd:
          requests:
            cpu: "100m"
            memory: "512Mi"
          limits:
            cpu: "500m"
            memory: "4Gi"
        mon:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "500m"
            memory: "1Gi"
        mgr:
          requests:
            cpu: "100m"
            memory: "256Mi"
          limits:
            cpu: "500m"
            memory: "1Gi"
        mds: *defaultResources
        rgw:
          requests:
            cpu: "100m"
            memory: "256Mi"
          limits:
            cpu: "300m"
            memory: "512Mi"
        crashcollector:
          requests:
            cpu: "25m"
            memory: "32Mi"
          limits:
            cpu: "50m"
            memory: "64Mi"
        provisioner: *defaultResources

      crashCollector:
        disable: false

      csi:
        csiRBDPluginResource:
          requests:
            cpu: "5m"
            memory: "64Mi"
          limits:
            cpu: "100m"
            memory: "256Mi"
        csiCephFSPluginResource:
          requests:
            cpu: "5m"
            memory: "64i"
          limits:
            cpu: "100m"
            memory: "256Mi"
        csiRBDProvisionerResource: *defaultResources
        csiCephFSProvisionerResource: *defaultResources
        readAffinity:
          enabled: true

      dashboard:
        enabled: true
        urlPrefix: *rootPath
        ssl: false
        prometheusEndpoint: http://prometheus-operated.observability.svc.cluster.local:9090

      mgr:
        modules:
          - name: insights
            enabled: true
          - name: pg_autoscaler
            enabled: true
          - name: rook
            enabled: true

      mon:
        count: 3
        allowMultiplePerNode: false

      network:
        provider: host
        connections:
          requireMsgr2: true

      priorityClassNames:
        crashcollector: system-node-critical
        exporter: system-node-critical

    placement:
      mds:
        tolerations: *controlPlaneToleration
        nodeAffinity: *controlPlaneAffinity
      mon:
        tolerations: *controlPlaneToleration
        nodeAffinity: *controlPlaneAffinity
      mgr:
        tolerations: *controlPlaneToleration
        nodeAffinity: *controlPlaneAffinity
      osd:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: storage.rook.io/ceph
                    operator: In
                    values:
                      - "true"

    storage:
      useAllNodes: false
      useAllDevices: false
      deviceFilter: nvme0n1
      config:
        osdsPerDevice: "1"
      nodes:
        - name: "metal-04"
          devices:
            - name: "/dev/sda"
        - name: "metal-05"
          devices:
            - name: "/dev/sda"
        - name: "metal-06"
          devices:
            - name: "/dev/sda"

    cephBlockPools:
      - name: ceph-blockpool
        spec:
          failureDomain: host
          replicated:
            size: 3
        storageClass:
          enabled: true
          name: ceph-block
          isDefault: true
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          volumeBindingMode: Immediate
          mountOptions: ["discard"]
          parameters:
            imageFormat: "2"
            imageFeatures: layering,fast-diff,object-map,deep-flatten,exclusive-lock
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: ext4

    cephBlockPoolsVolumeSnapshotClass:
      enabled: true
      name: csi-ceph-blockpool
      isDefault: false
      deletionPolicy: Delete

    cephFileSystems:
      - name: &cephFileSystemName ceph-filesystem
        spec:
          metadataPool:
            replicated:
              size: 3
          dataPools:
            - failureDomain: host
              replicated:
                size: 3
              name: data0
          metadataServer:
            activeCount: 1
            activeStandby: true
            priorityClassName: system-cluster-critical
            resources: *defaultResources
            placement:
              tolerations: *controlPlaneToleration
              nodeAffinity: *controlPlanePreferredAffinity
              topologySpreadConstraints:
                - maxSkew: 1
                  topologyKey: kubernetes.io/hostname
                  whenUnsatisfiable: DoNotSchedule
                  labelSelector:
                    matchLabels:
                      app.kubernetes.io/name: ceph-mds
                      app.kubernetes.io/part-of: *cephFileSystemName

        storageClass:
          enabled: true
          isDefault: false
          name: ceph-filesystem
          pool: data0
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          volumeBindingMode: Immediate
          parameters:
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: ext4

    cephFileSystemVolumeSnapshotClass:
      enabled: true
      name: csi-ceph-filesystem
      isDefault: false
      deletionPolicy: Delete
