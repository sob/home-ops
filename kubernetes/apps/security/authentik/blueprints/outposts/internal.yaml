---
# yaml-language-server: $schema=https://goauthentik.io/blueprints/schema.json
# yamllint disable
version: 1
metadata:
  name: STONEHEDGES-outposts-internal
entries:
  - model: authentik_blueprints.metaapplyblueprint
    attrs:
      identifiers:
        name: STONEHEDGES-apps-media-bazarr
      required: true
  - model: authentik_blueprints.metaapplyblueprint
    attrs:
      identifiers:
        name: STONEHEDGES-apps-media-lidarr
      required: true
  - model: authentik_blueprints.metaapplyblueprint
    attrs:
      identifiers:
        name: STONEHEDGES-apps-media-prowlarr
      required: true
  - model: authentik_blueprints.metaapplyblueprint
    attrs:
      identifiers:
        name: STONEHEDGES-apps-media-radarr
      required: true
  - model: authentik_blueprints.metaapplyblueprint
    attrs:
      identifiers:
        name: STONEHEDGES-apps-media-readarr
      required: true
  - model: authentik_blueprints.metaapplyblueprint
    attrs:
      identifiers:
        name: STONEHEDGES-apps-media-sonarr
      required: true
  - model: authentik_blueprints.metaapplyblueprint
    attrs:
      identifiers:
        name: STONEHEDGES-apps-media-usenet
      required: true
  - model: authentik_outposts.outpost
    identifiers:
      name: internal
    attrs:
      type: proxy
      service_connection:
        !Find [authentik_outposts.outpostserviceconnection,[name, "Local Kubernetes Cluster"]]
      providers:
        - !Find [authentik_core.provider,[name, "k8s/stonehedges.net/services-media/bazarr"]]
        - !Find [authentik_core.provider,[name, "k8s/stonehedges.net/services-media/lidarr"]]
        - !Find [authentik_core.provider,[name, "k8s/stonehedges.net/services-media/prowlarr"]]
        - !Find [authentik_core.provider,[name, "k8s/stonehedges.net/services-media/radarr"]]
        - !Find [authentik_core.provider,[name, "k8s/stonehedges.net/services-media/readarr"]]
        - !Find [authentik_core.provider,[name, "k8s/stonehedges.net/services-media/sonarr"]]
        - !Find [authentik_core.provider,[name, "k8s/stonehedges.net/services-media/usenet"]]
      config:
        log_level: info
        authentik_host: https://sso.${SECRET_DOMAIN}
        authentik_host_insecure: false
        docker_map_ports: true
        kubernetes_replcias: 1
        kubernetes_ingress_class_name: internal
        kubernetes_ingress_secret_name: authentik-outpost-tls
        kubernetes_namespace: security
        kubernetes_service_type: ClusterIP
        object_naming_template: ak-outpost-%(name)s
