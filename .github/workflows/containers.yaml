---
name: Build Containers

on:
  push:
    branches: [main]
    paths:
      - "containers/**"
  pull_request:
    branches: [main]
    paths:
      - "containers/**"
  workflow_dispatch:
    inputs:
      app:
        description: "Container to build (optional - builds all changed if empty)"
        required: false
        type: string

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      changed-files: ${{ steps.changed-files.outputs.all_changed_files }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        if: github.event_name != 'workflow_dispatch'
        uses: tj-actions/changed-files@v41
        with:
          files: containers/**
          dir_names: true
          dir_names_max_depth: 2
          json: true
          escape_json: false

  changed:
    runs-on: ubuntu-latest
    needs: prepare
    outputs:
      apps: ${{ steps.changed.outputs.apps }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Determine changed apps
        id: changed
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            if [ -n "${{ github.event.inputs.app }}" ]; then
              # Build specific app
              echo "apps=[\"${{ github.event.inputs.app }}\"]" >> $GITHUB_OUTPUT
            else
              # Build all apps
              apps=$(find containers -maxdepth 1 -mindepth 1 -type d -exec basename {} \; | jq -R -s -c 'split("\n") | map(select(length > 0))')
              echo "apps=$apps" >> $GITHUB_OUTPUT
            fi
          else
            # Automatic trigger - use changed files
            changed_files="${{ needs.prepare.outputs.changed-files }}"
            echo "Changed files: $changed_files"
            if [ -z "$changed_files" ] || [ "$changed_files" = "[]" ] || [ "$changed_files" = "null" ] || [ "$changed_files" = "" ]; then
              echo "No changes detected, setting empty array"
              echo "apps=[]" >> $GITHUB_OUTPUT
            else
              # Validate JSON before processing
              if echo "$changed_files" | jq empty 2>/dev/null; then
                # Extract app directories from changed files
                apps=$(echo "$changed_files" | jq -r '.[]' | cut -d'/' -f2 | sort -u | jq -R -s -c 'split("\n") | map(select(length > 0))')
                echo "Extracted apps: $apps"
                echo "apps=$apps" >> $GITHUB_OUTPUT
              else
                echo "Invalid JSON in changed_files, setting empty array"
                echo "apps=[]" >> $GITHUB_OUTPUT
              fi
            fi
          fi

  build:
    uses: ./.github/workflows/app-builder.yaml
    needs: changed
    if: ${{ fromJson(needs.changed.outputs.apps)[0] != null }}
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        app: ${{ fromJson(needs.changed.outputs.apps) }}
    with:
      app: ${{ matrix.app }}
      release: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    secrets: inherit