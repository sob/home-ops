---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: '3'

tasks:
  talos:
    desc: Bootstrap talos
    cmds:
      - for: { var: TALOS_NODES }
        cmd: >
          sops exec-file --input-type yaml --output-type yaml {{.ITEM}} "minijinja-cli {}"
          | talosctl --nodes {{base .ITEM | replace "sops.yaml.j2" ""}} apply-config --insecure --file /dev/stdin
      - until talosctl --nodes {{.TALOS_CONTROLLER}}
      - talosctl kubeconfig --nodes {{.TALOS_CONTROLLER}} --force --force-context-name main {{.KUBERNETES_DIR}}
    vars:
      TALOS_CONTROLLER:
        sh: talosctl config info --output json | jq --raw-output '.endpoints[]' | shuf -n 1
      TALOS_NODES:
        sh: ls {{.KUBERNETES}}/bootstrap/talos/*.j2
    preconditions:
      - talosctl config info
      - test -f {{.KUBERNETES_DIR}}/.talosconfig
      - which jq minijinja-cli sops talosctl

  apps:
    desc: Bootstrap Apps
    prompt: Bootstrap apps into the cluster?
    cmds:
      - helmfile --file bootstrap/helmfile.yaml apply --skip-diff-on-install --suppress-diff
    preconditions:
      - test -f bootstrap/helmfile.yaml
      - which curl jq helmfile kubectl op talosctl
