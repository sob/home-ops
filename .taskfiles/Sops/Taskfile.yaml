---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

tasks:

  age-keygen:
    desc: Initialize Age Key for Sops
    cmd: age-keygen --output {{.AGE_FILE}}
    status: ["test -f {{.AGE_FILE}}"]

  unlock:
    desc: Decrypt cluster-secrets.sops.yaml file
    cmds:
      - task: .decrypt-file
        vars:
          file: "{{.KUBERNETES_DIR}}/flux/vars/cluster-secrets.secret.sops.yaml"
      - cat "{{.KUBERNETES_DIR}}/flux/vars/cluster-secrets.secret.sops.yaml"

  lock:
    desc: Encrypt cluster-secrtes.sops.yaml file
    cmds:
      - task: .encrypt-file
        vars:
          file: "{{.KUBERNETES_DIR}}/flux/vars/cluster-secrets.secret.sops.yaml"
      - cat "{{.KUBERNETES_DIR}}/flux/vars/cluster-secrets.secret.sops.yaml"

  decrypt:
    desc: Decrypt all Kubernetes SOPS secrets
    cmds:
      - for: { var: file }
        task: .decrypt-file
        vars:
          file: "{{.ITEM}}"
    vars:
      file:
        sh: find "{{.KUBERNETES_DIR}}" -type f -name "*.sops.*" -exec sops filestatus {} | jq --exit-status '.encrypted' \;

  .decrypt-file:
    internal: true
    cmd: sops --decrypt --in-place {{.file}}
    requires:
      vars: ["file"]
    preconditions:
      - msg: Missing SOPS config file
        sh: test -f {{.SOPS_CONFIG_FILE}}
      - msg: Missing SOPS age file
        sh: test -f {{.AGE_FILE}}

  encrypt:
    desc: Encrypt all Kubernetes SOPS secrets
    cmds:
      - for: { var: file }
        task: .encrypt-file
        vars:
          file: "{{.ITEM}}"
    vars:
      file:
        sh: find "{{.KUBERNETES_DIR}}" -type f -name "*.sops.*" -exec grep -L "ENC\[AES256_GCM" {} \;

  .encrypt-file:
    internal: true
    cmd: sops --encrypt --in-place {{.file}}
    requires:
      vars: ["file"]
    preconditions:
      - msg: Missing Sops config file
        sh: test -f {{.SOPS_CONFIG_FILE}}
      - msg: Missing Sops Age key file
        sh: test -f {{.AGE_FILE}}

  .reset:
    internal: true
    cmd: rm -rf {{.SOPS_CONFIG_FILE}}
